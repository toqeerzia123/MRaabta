@model  MRaabta.Models.RiderPerformanceReportModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section styles{
    <link href="~/Content/Site.css" rel="stylesheet" />
    <link href="~/Content/datatable.css" rel="stylesheet" />

    <style>
        /* Center the loader */
        .outer_box {
            background: gray none repeat scroll 0 0;
            height: 100%;
            opacity: 0.9;
            position: fixed;
            top: 0px;
            left: 0px;
            width: 100%;
            z-index: 100000;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
        }

        .loader {
            border: 16px solid #f3f3f3;
            border-radius: 50%;
            border-top: 16px solid #3498db;
            width: 120px;
            height: 120px;
            -webkit-animation: spin 2s linear infinite;
            animation: spin 2s linear infinite;
        }

        @@-webkit-keyframes spin {
            0% {
                -webkit-transform: rotate(0deg);
            }

            100% {
                -webkit-transform: rotate(360deg);
            }
        }

        @@keyframes spin {
            0% {
                transform: rotate(0deg);
            }

            100% {
                transform: rotate(360deg);
            }
        }

        div.dataTables_wrapper div.dataTables_filter input {
            margin-left: 0.5em;
            display: inline-block;
            width: auto;
            background-color: white;
            color: black;
            border-color: black;
        }

        .dataTables_wrapper .dataTables_length select {
            border: 1px solid black;
            border-radius: 3px;
            padding: 5px;
            background-color: transparent;
            padding: 4px;
            background-color: white;
            border-color: black;
        }

        label {
            color: black;
        }
    </style>
}

<div class="app-content">

    <div style="background:rgba(255,255,255,.5);padding:10px;border-radius:5px">

        <h2 style="text-align:center">Rider Performance Timing Report</h2>

        <div class="row mb-1">
            <div class="col-3">
                <b>From Date</b>
                @Html.TextBoxFor(Model => Model.StartDate, "", new { @class = "form-control", @type = "date" })
            </div>
            <div class="col-3">
                <b>To Date</b>
                @Html.TextBoxFor(Model => Model.EndDate, "", new { @class = "form-control", @type = "date" })
            </div>
            <div class="col-3">
                <b>Select Rider</b>
                @if (ViewBag.ErrorMessage == null || ViewBag.ErrorMessage == "")
                {
                    <select id="ddl_rider" class="mdb-select form-control dropdown-primary md-form" multiple searchable="Search here..">
                        <option value=""></option>
                    </select>
                }
            </div>

            <div class="col-1 text-left">
                <button type="submit" class="btn btn-blue" style="margin-top: 20px !important" id="btnSearch">Search</button>
            </div>
            <div class="col-1 text-left">

                <button type="button" id="btnExportCSV" class="btn " style="margin-top: 20px !important">Export CSV</button>
            </div>

            <div>
                <h5 style="color:red">@ViewBag.ErrorMessage</h5>
            </div>
        </div>


        <div id="loaders" runat="server" class="outer_box" style="display: none;">
            <div id="loader" runat="server" class="loader"></div>
        </div>

        <div class="panel-body">
            <div id="div_tbl_details" style="width:100%">
            </div>
        </div>

        <table class="table table-bordered " id="PerformanceReportTable" style="font-size: 12px;">
            <thead>
                <tr style="font-weight:bold;font-size: 13px;">
                    <th>S. No</th>
                    <th>Rider Name</th>
                    <th>Rider Code</th>
                    <th>First Rs Download Time</th>
                    <th>First CN Performed Time</th>
                    <th>Last CN Performed Time</th>
                    <th>Total CNs</th>
                    <th>CN Delivered </th>
                    <th>CN Undelivered </th>
                    <th>CN RTS</th>
                    <th>Total Hours On Route</th>
                </tr>
            </thead>
            <tbody id="tbody">
            </tbody>
        </table>
    </div>
</div>

@section scripts{
    <script src="~/Scripts/datatable.js"></script>
    <script>
    var riders = [];

    function showLoader() {
        $("#btnSearch").attr("disabled", true);
        $('#loaders').show();
    }
    function hideLoader() {
        setTimeout(function () {
            $('#loaders').hide();
            $("#btnSearch").attr("disabled", false);
        }, 100);
    }

    $('#btnSearch').click(function () {
        var StartDateSelected = $('#StartDate').val();
        var EndDateSelected = $('#EndDate').val();
        var RiderSelected = $('#ddl_rider').val();

        if (StartDateSelected == '') {
            alert('Please select start date'); return
        }
        if (EndDateSelected == '') {
            alert('Please select end date'); return
        }
        if (RiderSelected == '') {
            alert('Please select rider'); return
        }

        if (RiderSelected.includes('0')) {
            RiderSelected = riders;
        }

        var dtStart = new Date(StartDateSelected);
        var dtEnd = new Date(EndDateSelected);
        $('#LblError').text('');

        $.ajax({
            url: "@Url.Action("PerformanceReport","RidersPerformaceTimingReport")",
            type: "POST",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ "Riders": RiderSelected, "StartDate": dtStart, "EndDate": dtEnd }),

            success: function (response) {

                if (response.Status) {
                    $("#PerformanceReportTable tbody tr").remove();
                    $('#PerformanceReportTable').dataTable().fnClearTable();
                    $('#PerformanceReportTable').dataTable().fnDestroy();
                    var serial = 0;
                    for (let y = 0; y < response.Data.DataList.length; y++) {
                        serial++;
                        $('#PerformanceReportTable').append(
                            `<tr>
                                    <td>${serial}</td>
                                    <td>${response.Data.DataList[y].RiderName}</td>
                                    <td>${response.Data.DataList[y].RiderCode}</td>
                                    <td>${response.Data.DataList[y].First_RS_DownloadString}</td>
                                    <td>${response.Data.DataList[y].First_CN_Performed}</td>
                                    <td>${response.Data.DataList[y].Last_CN_Performed}</td>
                                    <td>${response.Data.DataList[y].TotalCNs}</td>
                                    <td>${response.Data.DataList[y].CNDelivered}</td>
                                    <td>${response.Data.DataList[y].CNUnDelivered}</td>
                                    <td>${response.Data.DataList[y].CN_RTS}</td>
                                    <td>${response.Data.DataList[y].TotalTimeOnRoute}</td>
                                </tr>`);
                    }
                    if ($('#PerformanceReportTable') != null) {
                        $('#PerformanceReportTable').DataTable({
                            "paging": true,
                             "lengthMenu": [[10, 50, 100, -1], [10, 50, 100, "All"]],
                            "ordering": false,
                            "info": false
                        });
                    }
                } else {
                    alert(response.Message);
                        $('#LblError').text(response.Message);
                }
            },
            error: function (xhr, status, errorThrown) {
                alert(xhr.status);
                alert(xhr.responseText);
            }
        });
    });
 
     $(function () {

            $('body').on('click', '#btnExportCSV', function () {
                exportTableCSV('#PerformanceReportTable', 'RiderPerformanceReport.csv')
            });

        $(document).on({
            ajaxStart: function () { showLoader() },
            ajaxStop: function () { hideLoader(); },
        })
        $('select').select2();

        var sDate, eDate;
        $('#StartDate').change(function () {
            debugger;
            sDate = new Date($(this).val());

            if (sDate != "" && eDate != "" && sDate <= eDate) {
                if ((Math.abs(eDate - sDate)/86400000)>=31) {
                    swal('Maximum allowed date is 31 days');
                    return;

             }
                getRiders(sDate, eDate);
            }
            if (sDate > eDate) {
                alert('Select Correct Date');
            }
        });

        $('#EndDate').change(function () {
            debugger;
            eDate = new Date($(this).val());
            if (sDate != "" && eDate != "" && sDate <= eDate) {
                if ((Math.abs(eDate - sDate)/86400000)>=31) {
                    swal('Maximum date selection is 31 days');
                    return;
             }
                getRiders(sDate, eDate);
            }
            else if (sDate == "" || eDate == "") {
            }
            if (sDate > eDate) {
                alert('Select Correct Date');
            }
        });

        var getRiders = (sDate, eDate) => {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("ViewRiders","RidersPerformaceTimingReport")',
               contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ "sDate": sDate, "eDate": eDate  }),

                success: (rs) => {
                    if (rs.Status) {

                        var html = ``;
                        var data = rs.Data;
                        riders = data.map((x) => x.Value);

                        for (let x of data) {
                            html += `<option value="${x.Value}">${x.Value}-${x.Text}</option>`;
                        }
                        $('#ddl_rider').html(html);
                    }
                    else {
                        swal(rs.Message);
                        $('#LblError').text(rs.Message);
                    }
                }
            });
        };
    });

        function downloadCSV(csv, filename) {
        var csvFile;
        var downloadLink;

        // CSV file
        csvFile = new Blob([csv], { type: "text/csv" });

        // Download link
        downloadLink = document.createElement("a");

        // File name
        downloadLink.download = filename;

        // Create a link to the file
        downloadLink.href = window.URL.createObjectURL(csvFile);

        // Hide download link
        downloadLink.style.display = "none";

        // Add the link to DOM
        document.body.appendChild(downloadLink);

        // Click download link
        downloadLink.click();
    }

    function exportTableCSV(table, filename) {
        var csv = [];
        var rows = document.querySelectorAll(`${table} tr`);

        for (var i = 0; i < rows.length; i++) {
            var row = [], cols = rows[i].querySelectorAll("td, th");

            for (var j = 0; j < cols.length; j++)
                row.push(cols[j].innerText);

            csv.push(row.join(","));
        }

        // Download CSV file
        downloadCSV(csv.join("\n"), filename);
    }
    </script>
}
