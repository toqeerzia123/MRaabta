@model MRaabta.Models.DeliveryModel

@{
    Layout = "~/Views/Shared/_Layout2.cshtml";
    ViewBag.Title = "ViewDelivery";
}

@section styles{
    <link href="~/Content/Site.css" rel="stylesheet" />
    <style>
        .dvclass {
            background: #50d771;
        }

            .dvclass a {
                color: #0810ff;
            }

        .undvclass {
            background: #ca0000;
            color: rgba(255,255,255,.8);
        }

            .undvclass a {
                color: #ffe108;
            }

        .rtsclass {
            background: #f36523;
        }

        .select2-container .select2-selection--single {
            height: 37px !important;
        }

        .select2-container--default .select2-selection--single .select2-selection__arrow {
            height: 37px !important;
        }

        .select2-container--default .select2-selection--single .select2-selection__rendered {
            height: 37px !important;
            line-height: 37px !important;
        }
    </style>
}


<div class="row" id="listdiv" style="margin-top:0px;">
    <div class="col-12">
        <h3 class="text-center">Delivery Details</h3>
    </div>
    <div class="col-12 mt-3" id="tblreq">
    </div>
</div>

<div class="row">

</div>

<div class="row">

    <div class="col-3 mt-2">
        <label>From Date</label>
        @Html.TextBox("date", DateTime.Now.ToString(), new { @class = "form-control", @id = "StartDate", @name = "StartDate", @type = "date" })
    </div>
    <div class="col-3 mt-2">
        <label>To Date</label>
        @if (ViewBag.Date == null)
        {
            @Html.TextBox("date", DateTime.Now.ToString(), new { @class = "form-control", @id = "EndDate", @name = "EndDate", @type = "date" })
        }
        else
        {
            DateTime date = Convert.ToDateTime(ViewBag.Date);
            @Html.TextBox("date", date, new { @class = "form-control", @id = "EndDate", @name = "EndDate", @type = "date" })
        }
    </div>
    <div class="col-3 mt-2">
        <label>Select Rider</label><br />
        @if (ViewBag.err == null || ViewBag.err == "")
        {
            @*@Html.DropDownList("ddl_rider", ViewBag.Riders as List<SelectListItem>, "Select a Rider", new { @class = "form-control dropdownRiders" });*@
            <select id="ddl_rider" class="form-control ">
                <option value="" disabled selected>choose rider</option>
            </select>
        }
    </div>
    <div class="col-3 mt-2">
        <input type="button" name="btn_search" value="Search" class="btn btn-onLine" id="btn_search" style="border:1px solid black;height:55%;" />

    </div>
    <div class="row col-md-12">
        <div class="col-8 mt-3" style="height:300px; width: 78%;">

            <div id="chartContainer" style="height:300px"></div>
        </div>
        <div class="col-4" style="margin-top: 2em;">
            <div id="MostReasons">
            </div>
            <div id="Abc">

            </div>
        </div>

    </div>
    <div id="wait" style="display:none;width:69px;height:89px;border:1px solid black;position:absolute;top:50%;left:50%;padding:2px;">
        <img src="~/images/loader.gif" width="64" height="64" /><br>Loading..
    </div>
    <div class="panel-body mainTable" style="min-height:650px;">
        <div id="div_tbl_details" style="width:100%">
        </div>
    </div>
    @* childTable  *@
    @*<div class="mb-5" style="height:400px;">
            <div id="div_tbl_Child" style="width:100%;height:40%">
            </div>
        </div>*@
    <div class="panel-body mainTable" style="min-height:650px;">
        <div id="div_tbl_Child" style="width:100%; overflow:no-content">

        </div>
    </div>

</div>


@section scripts{
    <script src="@Url.Content("../Scripts/canvasjs.min.js")"></script>
    <script type="text/javascript">
    debugger;

            window.onload = function () {
                debugger;
                noBack();
            }
            function noBack() {
                window.history.forward();
    }

            var dataexists = '@ViewBag.err';
            var getRiders = (sDate, eDate,riderId) => {
                if (dataexists == "") {
                    debugger;
                       $.ajax({
                            type: 'get',
                            url: '@Url.Action("ViewRiders","DeliveryCoordinator")',
                             data: {
                                 sDate: sDate,
                                 eDate: eDate,
                                 riderId: riderId
                                 },
                            dataType: 'json',
                            success: (rs) => {
                                var html = ``;
                                for (let x of rs) {
                                    html += `<option value="${x.Value}">${x.Value}-${x.Text}</option>`;
                                }
                                $('#ddl_rider').html(html);
                                $('#ddl_rider').val(riderId);
                            }
                        });
                }
            };
               $(function () {
                var sDate, eDate;
                 $('#StartDate').change(function () {
                    debugger;
                    sDate = $(this).val();
                     if (sDate != "" && eDate != "" && sDate <= eDate) {
                         getRiders(sDate, eDate);
                     }
                     if (sDate > eDate) {
                    swal('Select Correct Date');
                     }

                 });
                 $('#EndDate').change(function () {
                    debugger;
                    eDate = $(this).val();
                     //alert(eDate);
                     if (sDate != "" && eDate != "" && sDate <= eDate) {
                         getRiders(sDate, eDate);
                     }
                     else if (sDate == "" || eDate == "") {

                     }
                     else {
                         swal('Select Correct Date');
                     }
                 });

            });
                if (dataexists != "") {
                  swal({
                        title: "Warning",
                        text: "You have been logged out",
                        type: "error"
                        }, function() {
                            window.location = "../Login";
                        });
            }
            var myVar;
    </script>
    <script type="text/javascript">
    $(document).ready(function () {
        debugger;
          $(document).on({
                ajaxStart: function () { $("#wait").show() },
                ajaxStop: function () { $("#wait").hide(); },
           });
         var dataexists = '@ViewBag.err';
        var date = '@ViewBag.Date';
        var riderId = '@ViewBag.RiderID';
        var ID = '@ViewBag.RunsheetNumber';
            if (date != "" && riderId != "") {
                $("#ddl_rider").val(riderId);
                $("#StartDate").val(date);
                $("#EndDate").val(date)
                search(riderId, date, date);
                getreasonpoints(riderId, date, date);
                getpoints(riderId, date, date);
                getDtails(ID);
                getRiders(date, date, riderId);


            }
        var dataexists = '@ViewBag.err';
        if (dataexists != "") {
                 swal({
                     title: "Warning",
                     text: "You have been logged out",
                    type: "error"
                }, function() {
                     window.location = "../Login";
                });

        }
         $("#btn_search").click(function (e) {
            debugger;
            if (dataexists != "") {
                swal({
                    title: "Warning",
                    text: "You have been logged out",
                    type: "error"
                }, function () {
                    window.location = "../Login";
                });

            }

             @Html.Raw(TempData["msg"]);
            e.preventDefault();
            $('#div_tbl_Child').empty();
            var riderCode = $("#ddl_rider").val().toString();
            var StartDate = $("#StartDate").val().toString();
            var EndDate = $("#EndDate").val().toString();

            if (riderCode == '') {
                swal("Select Rider");
                return;
             }
             if (riderCode == null) {
                 swal("No Rider Found");
                return;
             }
            if (!StartDate) {
                swal('Select From Date');
                return;
            }

            if (!EndDate) {
                swal('Select To Date');
                return;
            }

            else {
                search(riderCode, StartDate, EndDate);
                getreasonpoints(riderCode, StartDate, EndDate);
                getpoints(riderCode, StartDate, EndDate);
            }
        });

          function search(riderCode, StartDate, EndDate) {
                          $.ajax({
                    type: 'GET',
                    url: '../DeliveryCoordinator/getDeliveryByRider',
                    data: { riderCode: riderCode, StartDate: StartDate, EndDate: EndDate },
                    contentType: 'application/html; charset=utf-8',
                    dataType: "html",
                    success: function (response) {
                        debugger;
                        $('#div_tbl_details').html(response);
                    },
                    failure: function (response) {
                        swal('Error! Something went wrong');
                    },
                    error: function (response) {
                        swal('Error! Something went wrong');
                    }
                });
        debugger;

    }

          function getreasonpoints(riderCode, StartDate, EndDate) {
            debugger;
            $.ajax({
                type: 'post',
                url: '../DeliveryCoordinator/GetReasonPoints',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: false,
                //processData: false,
                data: JSON.stringify({ riderCode: riderCode, StartDate: StartDate, EndDate: EndDate }),
                success: function (rs) {
                    debugger;

                        //var TotalConsignment = rs.dataPoints[0].delivered + rs.dataPoints[0].undelivered + rs.dataPoints[0].Pending;
                        //alert(TotalConsignment)
                    var TCN = rs.dataPoints[0].TotalCN;
                    var TCNDownloaded = rs.dataPoints[0].TCNDownloaded;
                        //alert(TCN)
                        var Performed = rs.dataPoints[0].delivered + rs.dataPoints[0].undelivered;
                        //alert(Performed)
                      var UnPerformed = TCNDownloaded - Performed;
                    if (rs.dataPoints[0].delivered == 0 && rs.dataPoints[0].undelivered == 0 && UnPerformed == 0) {
                        //delievered one
                        $("#chartContainer").empty();
                        $("#MostReasons").empty();
                        $("#Abc").empty();
                    }
                    else {
                        var TotalR = rs.dataPoints[0].TotalRunsheet;
                        var TCN = rs.dataPoints[0].TotalCN;
                        //alert(TCN)
                        var Performed = rs.dataPoints[0].delivered + rs.dataPoints[0].undelivered + rs.dataPoints[0].deliveredRts;
                        //alert(Performed)
                        TCNDownloaded = rs.dataPoints[0].TCNDownloaded;
                        var UnPerformed = TCNDownloaded - Performed;
                        var City = rs.dataPoints[0].City;
                        var courier = rs.dataPoints[0].Courier;
                        var touchpoints = rs.dataPoints[0].Touchpoints;
                        var totaltime = rs.dataPoints[0].TotalTimeTaken;
                        var route = rs.dataPoints[0].Route;
                        var Rider_IEMI = rs.dataPoints[0].Rider_IEMI;
                        DownloadedRunsheet = rs.dataPoints[0].DownloadedRunsheet;

                        //alert(UnPerformed)
                        // var TotalConsignment = rs.dataPoints[0].delivered + rs.dataPoints[0].undelivered;
                        //alert(TotalConsignment)

                        $('#MostReasons').html("<br/><div style='color:black; font-weight: bold; font-size:12px;'><span>Courier Name: </span> <span>" + courier + "</span></div><div style='color:black; font-weight: bold; font-size:12px;'><span>City: </span> <span>" + City + "</span></div><div style='color:black; font-weight: bold; font-size:12px;'><span>Rider IEMI: </span> <span>" + Rider_IEMI + "</span></div><div style='color:black; font-weight: bold; font-size:12px;'><span>Route: </span> <span>" + route + "</span></div><br/><div style='color:black; font-weight: bold; font-size:12px;'><span>Total Touchpoints: </span> <span>" + touchpoints + "</span></div><div style='color:black; font-weight: bold; font-size:12px;'><span>Total Time Taken: </span> <span>" + totaltime + "</span></div><br/><div style='color:black; font-weight: bold; font-size:12px;'><span>Total Runsheets: </span> <span class='col-md-2'>" + TotalR + "</span></div><div style='color:black; font-weight: bold; font-size:12px;'><span>Total Consignments: </span> <span class='col-md-2'>" + TCN + "</span></div><br/><div style='color:black; font-weight: bold; font-size:12px;'><span>Total Donwloaded Runsheets: </span> <span class='col-md-2'>" + DownloadedRunsheet + "</span></div> <div style='color:black; font-weight: bold; font-size:12px;'><span>Total Downloaded Consignments: </span> <span class='col-md-2'>" + TCNDownloaded + "</span></div><div style='color:green; font-weight: bold; font-size:12px;'><span>Attempted: </span> <span>" + Performed + "</span></div><div style='color:#009688; font-weight: bold; font-size:12px;'><span>UnAttempted: </span> <span>" + UnPerformed + "</span></div><br/><div style='color:#009688; font-weight: bold; font-size:12px;'><span id='totalKmDistance'>Total Distance travelled (approx.): </span> <span></span></div>");
                                  var chart = new CanvasJS.Chart("chartContainer", {
                            animationEnabled: true,
                                      title: {
                                 //text: "Total Consignment: " + TotalConsignment + "downloaded",
                                //text: "Total Performed: " + Performed,
                                //text: "Total Consignment: " + TotalCN + "all",
                                text: "Delivery Details",
                                horizontalAlign: "left",
                                //fontFamily: "Open Sans",
                                fontSize: '16'
                                      },

                            data: [{
                                type: "doughnut",
                                plot: {
                                    borderColor: "#2B313B",
                                    borderWidth: 5
                                },
                                //subtitles: {
                                //     text: "Total Consignment: " + TotalConsignment + "downloaded",
                                //text: "Total Performed: " + Performed,
                                //text: "Total Consignment: " + TotalCN + "all",
                                //},
                                valueBox: {
                                    placement: 'out',
                                    text: '%t\n%npv%',
                                    fontFamily: "Open Sans"
                                },
                                tooltip: {
                                    fontSize: '18',
                                    fontFamily: "Open Sans",
                                    padding: "5 10",
                                    text: "%npv%"
                                },
                                animation: {
                                    effect: 2,
                                    method: 5,
                                    speed: 900,
                                    sequence: 1,
                                    delay: 3000
                                },
                                source: {
                                    text: 'gs.statcounter.com',
                                    fontColor: "#8e99a9",
                                    fontFamily: "Open Sans"
                                },

                        //       subtitles: [
                        //    {
                        //        horizontalAlign: "left",
                        //               //text: y + " consignments against " + cust + " customers"
                        //               text: "Total Consignment: " + TotalConsignment + "downloaded",
                        //               text: "Total Performed: " + Performed,
                        //               text: "Total Consignment: " + TotalCN + "all"

                        //    }
                        //    //{
                        //    //    horizontalAlign: "right",
                        //    //    text: rs.dataPoints[indexmax].Label + " sent " + rs.dataPoints[indexmax].Y + " consignments.",
                        //    //    fontColor: "green"
                        //    //},
                        //    //{

                        //    //    horizontalAlign: "right",
                        //    //    text: rs.dataPoints[indexmin].Label + " sent " + rs.dataPoints[indexmin].Y + " consignments.",
                        //    //    fontColor: "red"

                        //    //}
                        //],
                                plotarea: {
                                    margin: "20 0 0 0"
                                },
                                series: [{
                                    values: [11.38],
                                    text: "Internet Explorer",
                                    backgroundColor: '#50ADF5',
                                },
                                {
                                    values: [56.94],
                                    text: "Chrome",
                                    backgroundColor: '#FF7965',
                                    detached: true
                                },
                                {
                                    values: [14.52],
                                    text: 'Firefox',
                                    backgroundColor: '#FFCB45',
                                    detached: true
                                },
                                {
                                    text: 'Safari',
                                    values: [9.69],
                                    backgroundColor: '#6877e5'
                                },
                                {
                                    text: 'Other',
                                    values: [7.48],
                                    backgroundColor: '#6FB07F'
                                }
                                ],
                                //plot: {
                                //  borderColor: "#2B313B",
                                //  borderWidth: 5,
                                //   slice: 90,
                                //  valueBox: {
                                //    placement: 'out',
                                //    text: '%t\n%npv%',
                                //    fontFamily: "Open Sans"
                                //  },
                                startAngle: 60,
                                innerRadius: 60,
                                indexLabelFontSize: 12,
                                indexLabel: "{label} - {y}",
                                toolTipContent: "<b>{label}:</b> {y}",
                                dataPoints: [
                                    //{ y: rs.dataPoints[0].Pending, label: "Pending" },
                                    { y: rs.dataPoints[0].delivered, label: "Delivered", color: "#43a047" },
                                    { y: rs.dataPoints[0].deliveredRts, label: "Delivered-RTS", color: "#ff5e00" },
                                    { y: rs.dataPoints[0].undelivered, label: "UnDelivered", color: "#b71c1c" },
                                    { y: UnPerformed, label: "UnAttempted", color: "#009688" }
                                ]

                                      }]

                        });
                        chart.render();
                         //$("#chartContainer").empty();

                        $('#btn_switch').click(function () {
                            debugger;
                            var riderCode = $("#ddl_rider").val().toString();
                            sswitch(riderCode);
                        });
                    }
                }
            });

        }

          function getpoints(riderCode, StartDate, EndDate) {
            debugger;
            $.ajax({
                type: 'post',
                url: '../DeliveryCoordinator/GetPoints',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: false,
                //processData: false,
                data: JSON.stringify({ riderCode: riderCode, StartDate: StartDate, EndDate: EndDate }),
                success: function (rs) {
                    if (rs.dataPoints.length == 0) {

                    }
                    else {
                        var reason = rs.dataPoints[0].Reason;
                        var count = rs.dataPoints[0].Maximum_Count
                        if (reason == null) {
                            $("#Abc").empty();
                        }
                        else {

                            //$('#MostReasons').html("<br/><div class=col-md-3><Label> <b>Most Occuring Reason: </b></Label></div>"+"<div class=col-md-1>"+reason+"</div>");
                           // $('#Abc').html("<br/><div style='color:red; font-weight: bold; font-size:12px;'><span>Most Ocurring Reasons: </span> <span class='col-md-2'>" + reason + "</span></div>");

                        }
                    }
                }
            });
        }
    });

        $.fn.scrollView = function () {
        return this.each(function () {
            $('html, body').animate({
                scrollTop: $(this).offset().top
            }, 1000);
        });
    }



        function sswitch(riderCode) {
            debugger;
            $.ajax({
                type: 'post',
                url: '../Delivery/LoggingOut',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify({ riderCode: riderCode}),
                    success: function (data) {
                        debugger;
                        swal(data)

                }
            });
        }



    function getDtails(ID) {
        debugger;
        $.ajax({
            type: 'GET',
            url: '../DeliveryCoordinator/GetDeliveryByRunsheet',
            data: {
                RunsheetID: ID,
            date:'@ViewBag.Date' },
            contentType: 'application/html; charset=utf-8',
            dataType: "html",
            success: function (response) {
                $('#div_tbl_Child').html(response);
                $('html, body').animate({
                    scrollTop: $("#div_tbl_Child").offset().top
                }, 1000);
            },
            failure: function (xhr, textStatus, error){
                  console.log(xhr.statusText);
                  console.log(textStatus);
                  console.log(error);
            },
            error: function (response) {
                swal('Error! Something went wrong');
            }
        });
    };

    </script>

    <script>
        $(function(){
        $('body').on('click', '.btnView', function (e) {
                e.preventDefault();
                var data = $(this).data('view');
                //console.log(data);
                $('#modalCn').text(data.CN);

                var table = `
                        <table class="table table-bordered">
                                <tr>
                                    <th>NIC</th>
                                    <td>${data.NicNo}</td>
                                </tr>
                                <tr>
                                    <th>Rider Comments</th>
                                    <td>${data.RiderComments}</td>
                                </tr>
                                <tr>
                                    <th>COD</th>
                                    <td>${data.CodAmount}</td>
                                </tr>
                                <tr>
                                    <th>Weight</th>
                                    <td>${data.Weight}</td>
                                </tr>
                                <tr>
                                    <th>Pieces</th>
                                    <td>${data.Pcs}</td>
                                </tr>
                                <tr>
                                    <th>Origin</th>
                                    <td>${data.Origin}</td>
                                </tr>
                                <tr>
                                    <th>Destination</th>
                                    <td>${data.Destination}</td>
                                </tr>
                                <tr>
                                    <th>Reason</th>
                                    <td>${data.Reason}</td>
                                </tr>
                                <tr>
                                    <th>CN Image</th>
                                    <td><img src="${(`@Url.Content("http://20.46.47.21/mraabta/CnImage/")` + data.CN + `.jpg`)}" width="200px"/></td>
                                </tr>
                                ${[1, 3].includes(data.StatusId) ? `
                                    <tr>
                                    <th>Receiver</th>
                                    <td>${data.Receiver}</td>
                                    </tr>
                                    <tr>
                                    <th>Relation</th>
                                    <td>${data.Relation}</td>
                                    </tr>
                                    <tr>
                                    <th>Sign Image</th>
                                    <td><img src="${(`@Url.Content("http://20.46.47.21/mraabta/SignImage/")` + data.CN + `.jpg`)}" width="200px"/></td>
                                </tr>` : ``}
                                <tr>
                                    <th>View Map</th>
                                    <td><a href="${`@Url.Action("Index", "DlvRoute")` + `?isCN=true&rs=` + data.RunsheetNo +`&cn=` + data.CN}" target="_blank">View Map</a></td>
                                </tr>
                            </table>`;

                $('#tableView').html(table);
                $('#exampleModalCenter2').modal('show');
            });
        });
    </script>
}
